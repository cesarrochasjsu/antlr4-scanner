rusty


Table of Contents
─────────────────

1. Introduction
2. Prerequisites
.. 1. ANTLR4:
.. 2. A C++ compiler:
..... 1. Antlr CPP Runtime binary
.. 3. Runtime directories and Linking
3. Installation
.. 1. Trouble shooting
4. Usage
.. 1. Input


1 Introduction
══════════════

  This guide provides instructions for installing and using a scanner
  generated by ANTLR4 using a Makefile.


2 Prerequisites
═══════════════

  This project was developed on a rolling-release linux
  distro. Therefore, the antlr4 and cpp versions are far ahead of what
  they usually are

  Before installing the scanner, you will need to have the following
  prerequisites installed:

  If you have a


2.1 ANTLR4:
───────────

  ANTLR Parser Generator Version 4.11.1

  ANTLR4 is a parser generator that is used to generate the scanner code
  from a grammar file. To install ANTLR4, follow the instructions
  provided in the ANTLR4 documentation for your platform.

  <https://www.antlr.org/download.html>


2.2 A C++ compiler:
───────────────────

  g++ (GCC) 12.2.1 20230201

  You will need a C++ compiler to compile the generated scanner code. We
  recommend using a compiler that supports the C++20 standard.  [ANTLR4
  CPP installation and configuration for Linux and MacOS]


[ANTLR4 CPP installation and configuration for Linux and MacOS]
<https:https://www.cs.sjsu.edu/~mak/tutorials/InstallANTLR4Cpp.pdf>

2.2.1 Antlr CPP Runtime binary
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌

  [Antlr4 for linux]


  ANTLR4_CPP_RUNTIME_DIR is in /usr/local/include/antlr4-runtime
  ANTLR4_CPP_LIB_DIR is in /usr/local/lib


[Antlr4 for linux]
<https:https://www.antlr.org/download/antlr4-cpp-runtime-4.12.0-source.zip>


2.3 Runtime directories and Linking
───────────────────────────────────

  If you followed the directions above, the following directories
  specified in the Makefile are used

  ┌────
  │ #This is the Makefile and since they will be executed there is no need
  │ # to copy these lines into your terminal
  │ ANTLR4_CPP_RUNTIME_DIR=/usr/local/include/antlr4-runtime
  │ ANTLR4_CPP_LIB_DIR=/usr/local/lib
  │ ANTLR4_CPP_LIB=-lantlr4-runtime
  │ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
  └────

  If you have a working antlr4 and antlr4-cpp-runtime library then
  running `make` will build this program.


3 Installation
══════════════

  To install the ANTLR4-generated scanner, follow these steps:

  1. Download or clone the source code for the scanner.

  2. Open a terminal and navigate to the directory where the source code
     is located.

  3. Run the make command to compile the scanner code.

  4. If the compilation is successful, the scanner executable will be

  ┌────
  │ ./scanner
  └────


3.1 Trouble shooting
────────────────────

  If you get this error

  ┌────
  │ ./scanner: error while loading shared libraries: libantlr4-runtime.so.4.11.1: cannot open shared object file: No such file or directory
  └────
  One quick work around in a linux environment is to use

  ┌────
  │ export LD_LIBRARY_PATH=/usr/local/bin
  └────

  This will make antlr4 unusable so make sure to exit the session after
  you are done using this project


4 Usage
═══════

  To use the scanner, follow these steps:

  1. Create a text file containing the input text to be scanned.
  2. Open a terminal and navigate to the directory where the scanner
     executable is located.
  3. Run the scanner executable, passing the input file as a
     command-line argument. For example:

  ┌────
  │ scanner 
  └────


4.1 Input
─────────

  The input is determined by the file <file:test-in.txt>. The scanner
  will read the input file and output the tokens it recognizes to the
  console. Simply change <file:test-in.txt> for the *master text case*
