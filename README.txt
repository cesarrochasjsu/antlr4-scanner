Team 4


Table of Contents
─────────────────

1. Introduction
2. Linux Build Environment
3. Prerequisites
.. 1. Antlr CPP Runtime binary
.. 2. Clang++ compiler:
4. Installation
.. 1. Trouble shooting
5. Usage
.. 1. Test Case


1 Introduction
══════════════

  This guide provides instructions for installing and using a scanner
  generated by ANTLR4 using a Makefile.


2 Linux Build Environment
═════════════════════════

  This project's `antlr4>=4.11.1` generated code that can only be
  compiled with `clang++>=14.0.0`.

  Recommended: Ubuntu22.04 is the development environment used for this
  project without any linking or compiling errors as the software
  repositories provide an up to date `clang++=14.0.0` through the
  command

  ┌────
  │ sudo apt install clang
  └────

  Although this can be used on other rolling-release linux distros like
  `arch`.


3 Prerequisites
═══════════════

  The antlr4 and cpp versions are far ahead of what they usually are

  Before installing the scanner, you will need to have the following
  prerequisites:


3.1 Antlr CPP Runtime binary
────────────────────────────

  This was the antlr4-cpp-runtime library used to build this project:
  <https://www.antlr.org/download/antlr4-cpp-runtime-4.12.0-source.zip>

  Here is the tutorial to get it up and running on ubuntu:
  <https:https://www.cs.sjsu.edu/~mak/tutorials/InstallANTLR4Cpp.pdf>

  All that is needed is the commands in `Download and install the C++
  runtime for ANTLR` its subsection `Ubuntu installation`


3.2 Clang++ compiler:
─────────────────────

  Recommended: Ubuntu clang version 14.0.0-1ubuntu1

  You will need `clang++>=14.0.0` to run this project.


4 Installation
══════════════

  To install the ANTLR4-generated scanner, follow these steps:

  1. Download or clone the source code for the scanner.

  2. Open a terminal and navigate to the directory where the source code
     is located.

  3. Run the make command to compile the scanner code.

  ┌────
  │ make 
  └────

  1. If the compilation is successful, the scanner executable will be

  ┌────
  │ ./scanner
  └────


4.1 Trouble shooting
────────────────────

  If you get this error

  ┌────
  │ ./scanner: error while loading shared libraries: libantlr4-runtime.so.4.11.1: cannot open shared object file: No such file or directory
  └────
  One quick work around in a linux environment is to use

  ┌────
  │ export LD_LIBRARY_PATH=/usr/local/bin
  └────

  This will make antlr4 unusable so make sure to exit the session after
  you are done using this project


5 Usage
═══════

  To use the scanner, follow these steps:

  1. Create a text file containing the input text to be scanned.
  2. Open a terminal and navigate to the directory where the scanner
     executable is located.
  3. Run the scanner executable, passing the input file as a
     command-line argument. For example:

  ┌────
  │ ./scanner 
  └────


5.1 Test Case
─────────────

  The input is determined by the file <file:test-in.txt>. The scanner
  will read the input file and output the tokens it recognizes to the
  console. Simply change <file:test-in.txt> for the *master text case*
