* Introduction

This guide provides instructions for installing and using a scanner generated by ANTLR4 using a Makefile.

* Prerequisites

This project was developed on a rolling-release linux distro. Therefore, the antlr4 and cpp versions are far ahead of what they usually are 

Before installing the scanner, you will need to have the following prerequisites installed:

If you have a docker, you can run this inside an arch linux container and it will have the latest versions of antlr4 and g++ to build this project when you jump into the process. 


** ANTLR4:

ANTLR Parser Generator  Version 4.11.1

ANTLR4 is a parser generator that is used to generate the scanner code from a grammar file. To install ANTLR4, follow the instructions provided in the ANTLR4 documentation for your platform.

[[https://www.antlr.org/download.html]]

ANTLR4 4.11.1 generates higher than c++11 standard so to compile it make sure you have this one. 


** A C++ compiler:

g++ (GCC) 12.2.1 20230201

You will need a C++ compiler to compile the generated scanner code. We recommend using a compiler that supports the C++20 standard.
https:https://www.cs.sjsu.edu/~mak/tutorials/InstallANTLR4Cpp.pdf


*** Antlr CPP Runtime binary

https:https://www.antlr.org/download/antlr4-cpp-runtime-4.12.0-source.zip

ANTLR4_CPP_RUNTIME_DIR is in /usr/local/include/antlr4-runtime
ANTLR4_CPP_LIB_DIR is in /usr/local/lib


** Runtime directories and Linking

If you followed the directions above, the following directories specified in the Makefile are used

#+begin_src 
#This is the Makefile and since they will be executed there is no need
# to copy these lines into your terminal
ANTLR4_CPP_RUNTIME_DIR=/usr/local/include/antlr4-runtime
ANTLR4_CPP_LIB_DIR=/usr/local/lib
ANTLR4_CPP_LIB=-lantlr4-runtime
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
#+end_src

If you have a working antlr4 and antlr4-cpp-runtime library then running `make` will build this program. 

* Installation
To install the ANTLR4-generated scanner, follow these steps:

1. Download or clone the source code for the scanner.

2. Open a terminal and navigate to the directory where the source code is located.

3. Run the make command to compile the scanner code.

4. If the compilation is successful, the scanner executable will be

#+begin_src shell
./scanner
#+end_src

** Trouble shooting

If you get this error

#+begin_src 
./scanner: error while loading shared libraries: libantlr4-runtime.so.4.11.1: cannot open shared object file: No such file or directory
#+end_src
One quick work around in a linux environment is to use 

#+begin_src 
 export LD_LIBRARY_PATH=/usr/local/bin
#+end_src

This will make antlr4 unusable so make sure to exit the session after you are done using this project

* Usage
To use the scanner, follow these steps:

1. Create a text file containing the input text to be scanned.
2. Open a terminal and navigate to the directory where the scanner executable is located.
3. Run the scanner executable, passing the input file as a command-line argument. For example:

#+begin_src 
scanner 
#+end_src

** Input
The input is determined by the file [[file:test-in.txt]]. The scanner will read the input file and output the tokens it recognizes to the console. Simply change [[file:test-in.txt]] for the *master text case*
